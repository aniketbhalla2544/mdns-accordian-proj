{"version":3,"sources":["components/accordion/List.tsx","components/accordion/Panels.tsx","components/accordion/Panel.tsx","components/accordion/Tab.tsx","components/accordion/Group.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["List","props","className","Children","map","children","tab","index","currentTabIndex","cloneElement","activeTab","tabIndex","handleCurrentTabIndex","Panels","child","Panel","Tab","onClick","Group","useState","setCurrentTabIndex","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAiBeA,EAdF,SAACC,GACZ,OACE,qBAAKC,UAAU,sBAAf,SAEIC,WAASC,IAAIH,EAAMI,UAAU,SAACC,EAAKC,GACjC,OAAQA,KAAK,OAAKN,QAAL,IAAKA,OAAL,EAAKA,EAAOO,iBACrBC,uBAAaH,EAAK,CAAEI,UAAW,eAAgBC,SAAUJ,EAAOK,sBAAqB,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAOW,uBAAyBN,EAAIL,MAAMI,UACjII,uBAAaH,EAAK,CAAEK,SAAUJ,EAAOK,sBAAqB,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAOW,uBAAyBN,EAAIL,MAAMI,gBCIrGQ,EAZA,SAACZ,GACd,OACE,qBAAKC,UAAU,2BAAf,SAEKC,WAASC,IAAIH,EAAMI,UAAU,SAACS,EAAOP,GACpC,OAAQA,IAAUN,EAAMO,gBAAoBM,EAAQ,WCE/CC,EARD,SAACd,GACb,OACE,qBAAKC,UAAU,mBAAf,SACED,EAAMI,YCENW,EAAY,SAACf,GACjB,OACE,qBAAKgB,QAAS,WAAQhB,EAAMW,sBAAsBX,EAAMU,WAAaT,UAAYD,EAAMS,UAAP,UAAuBT,EAAMS,UAA7B,mBAA0D,iBAA1I,SACGT,EAAMI,YAKbW,EAAIE,MCXU,SAACjB,GAEb,MAA8CkB,mBAAS,GAAvD,mBAAOX,EAAP,KAAwBY,EAAxB,KAEMR,EAAwB,SAACJ,GAC7BY,EAAmBZ,IAGrB,OACE,sBAAKN,UAAU,+BAAf,iCACmBM,EAAkB,GAE/BL,WAASC,IAAIH,EAAMI,UAAU,SAACS,EAAYP,GACxC,OAAkB,IAAVA,EAEJE,uBAAaK,EAAO,CAAEN,gBAAiBA,EAAiBI,sBAAuBA,GAAyBE,EAAMb,MAAMI,UACpHI,uBAAaK,EAAO,CAAEN,gBAAiBA,GAAmBM,EAAMb,MAAMI,iBDJtFW,EAAIhB,KAAOA,EACXgB,EAAID,MAAQA,EACZC,EAAIH,OAASA,EAEEG,QE6DAK,MA7Ef,WAEE,OACE,sBAAKnB,UAAU,YAAf,UAGE,eAAC,EAAIgB,MAAL,WACE,eAAC,EAAIlB,KAAL,WACE,cAAC,EAAD,qBAGA,cAAC,EAAD,sBAGA,cAAC,EAAD,uBAGA,cAAC,EAAD,2BAKF,eAAC,EAAIa,OAAL,WACE,eAAC,EAAIE,MAAL,WACE,oBAAIb,UAAU,OAAd,qBACA,+CAEF,eAAC,EAAIa,MAAL,WACE,oBAAIb,UAAU,OAAd,qBACA,gDAEF,eAAC,EAAIa,MAAL,WACE,oBAAIb,UAAU,OAAd,qBACA,+CAEF,eAAC,EAAIa,MAAL,WACE,oBAAIb,UAAU,OAAd,qBACA,qDAON,eAAC,EAAIgB,MAAL,WACE,eAAC,EAAIlB,KAAL,WACE,cAAC,EAAD,qBAGA,cAAC,EAAD,sBAGA,cAAC,EAAD,0BAKF,eAAC,EAAIa,OAAL,WACE,eAAC,EAAIE,MAAL,WACE,oBAAIb,UAAU,OAAd,qBACA,+CAEF,eAAC,EAAIa,MAAL,WACE,oBAAIb,UAAU,OAAd,qBACA,gDAEF,eAAC,EAAIa,MAAL,WACE,oBAAIb,UAAU,OAAd,qBACA,yDCzDGoB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b255ebe5.chunk.js","sourcesContent":["import { Children, cloneElement } from \"react\";\r\n// import { ListProps } from \"../../interfaces/accordian\";\r\n\r\nconst List = (props: any) => {\r\n  return (\r\n    <div className='accordian__tabsList'>\r\n      {\r\n        Children.map(props.children, (tab, index) => {\r\n          return (index === props?.currentTabIndex)\r\n            ? cloneElement(tab, { activeTab: '__active-tab', tabIndex: index, handleCurrentTabIndex: props?.handleCurrentTabIndex }, tab.props.children)\r\n            : cloneElement(tab, { tabIndex: index, handleCurrentTabIndex: props?.handleCurrentTabIndex }, tab.props.children)\r\n        })\r\n      } \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List;\r\n","import { Children } from \"react\";\r\n\r\nconst Panels = (props: any) => {\r\n  return (\r\n    <div className='accordion__panel-wrapper'>\r\n      {\r\n         Children.map(props.children, (child, index) => {\r\n          return (index === props.currentTabIndex) ?  child : null\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Panels\r\n","\r\nconst Panel = (props: any) => {\r\n  return (\r\n    <div className='accordian__panel'>\r\n     {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Panel\r\n","import Group from \"./Group\";\r\nimport List from \"./List\";\r\nimport Panels from \"./Panels\";\r\nimport Panel from \"./Panel\";\r\nimport { ITab } from \"../../interfaces/accordian\";\r\n\r\nconst Tab: ITab = (props: any) => {\r\n  return (\r\n    <div onClick={() => { props.handleCurrentTabIndex(props.tabIndex) }} className={(props.activeTab) ? `${props.activeTab} accordian__tab` : \"accordian__tab\"}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nTab.Group = Group;\r\nTab.List = List;\r\nTab.Panel = Panel;\r\nTab.Panels = Panels;\r\n\r\nexport default Tab;\r\n","import { Children, cloneElement, useState } from \"react\";\r\nimport { GroupProps } from \"../../interfaces/accordian\";\r\n\r\nconst Group = (props: GroupProps) => {\r\n\r\n  const [currentTabIndex, setCurrentTabIndex] = useState(0);\r\n\r\n  const handleCurrentTabIndex = (currentTabIndex: number): void => {\r\n    setCurrentTabIndex(currentTabIndex);\r\n  }\r\n\r\n  return (\r\n    <div className='accordian__wrapper container'>\r\n      {`current Tab: ${currentTabIndex + 1}`}\r\n      {\r\n          Children.map(props.children, (child: any, index: number) => {\r\n            return (index === 0)\r\n              // tab indexes data passed to tab.list child only\r\n              ? cloneElement(child, { currentTabIndex: currentTabIndex, handleCurrentTabIndex: handleCurrentTabIndex }, child.props.children)\r\n              : cloneElement(child, { currentTabIndex: currentTabIndex }, child.props.children)\r\n          })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Group;\r\n","\nimport { Tab } from \"./components/accordion\";\n\nfunction App() {\n\n  return (\n    <div className='app__body'>\n\n      {/* first accordion */}\n      <Tab.Group>\n        <Tab.List>\n          <Tab>\n            recent\n          </Tab>\n          <Tab>\n            popular\n          </Tab>\n          <Tab>\n            trending\n          </Tab>\n          <Tab>\n            declining\n          </Tab>\n        </Tab.List>\n\n        <Tab.Panels>\n          <Tab.Panel>\n            <h1 className='fs-3'>Panel 1</h1>\n            <p>First panel</p>\n          </Tab.Panel>\n          <Tab.Panel>\n            <h1 className='fs-3'>Panel 2</h1>\n            <p>Second panel</p>\n          </Tab.Panel>\n          <Tab.Panel>\n            <h1 className='fs-3'>Panel 3</h1>\n            <p>Third panel</p>\n          </Tab.Panel>\n          <Tab.Panel>\n            <h1 className='fs-3'>Panel 4</h1>\n            <p>Third panel</p>\n          </Tab.Panel>\n        </Tab.Panels>\n      </Tab.Group>\n\n      \n      {/* second accordion */}\n      <Tab.Group>\n        <Tab.List>\n          <Tab>\n            recent\n          </Tab>\n          <Tab>\n            popular\n          </Tab>\n          <Tab>\n            trending\n          </Tab>\n        </Tab.List>\n\n        <Tab.Panels>\n          <Tab.Panel>\n            <h1 className='fs-3'>Panel 1</h1>\n            <p>First panel</p>\n          </Tab.Panel>\n          <Tab.Panel>\n            <h1 className='fs-3'>Panel 2</h1>\n            <p>Second panel</p>\n          </Tab.Panel>\n          <Tab.Panel>\n            <h1 className='fs-3'>Panel 3</h1>\n            <p>Third panel</p>\n          </Tab.Panel>\n        </Tab.Panels>\n      </Tab.Group>\n    \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/appstyle.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}